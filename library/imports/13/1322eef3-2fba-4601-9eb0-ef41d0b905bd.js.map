{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\Animal.js"],"names":["cc","Class","extends","Component","properties","data","default","type","JsonAsset","canGetOnTheBridge","lanternCom","mainScriptCom","lanternNode","getComponent","posInfo","json","LEFT_RIVER_BANK","LEFT_STAND_POINT","RIGHT_RIVER_BANK","RIGHT_STAND_POINT","onMouseDown","bridgeNode","bridgeCom","action","removeMouseDownEvents","animalComs","goBtnNode","pointIndex","searchStandPoint","console","log","getOn","moveTo","standPoints","standPointIndex","leftPos","getOff","rightPos","node","runAction","sequence","callFunc","resumeMouseDownEvents","ifSucceed","succeed","bindMouseDownEvent","on","Node","EventType","MOUSE_DOWN","removeMouseDownEvent","off","initPosInfo","x","y","moveAction","timeConsuming","setTimeConsuming","timeComsuming","crossRiverTimeConsuming","toggleBridgePosInfo","crossRiver","crossAction","showTimeConsuming","displayer","AnimalTimeConsumingDisplayer","string","chineseName","onMouseEnter","bindMouseEnterEvent","MOUSE_ENTER","onLoad","start"],"mappings":"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","file":"Animal.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["import { bindCursorEvent, bindScaleEvent, removeMouseDownEvents, resumeMouseDownEvents } from './Utils';\r\n//  动物类\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    data: {  //  游戏静态总数据\r\n      default: null,\r\n      type: cc.JsonAsset,\r\n    }\r\n  },\r\n\r\n  //  判断动物是否能上桥\r\n  canGetOnTheBridge() {\r\n    const lanternCom = this.mainScriptCom.lanternNode.getComponent('Lantern');\r\n    // console.log(this.posInfo, lanternCom.posInfo);\r\n    if (this.posInfo === this.data.json.posInfo.LEFT_RIVER_BANK && lanternCom.posInfo === this.data.json.posInfo.LEFT_STAND_POINT) return true;\r\n    if (this.posInfo === this.data.json.posInfo.RIGHT_RIVER_BANK && lanternCom.posInfo === this.data.json.posInfo.RIGHT_STAND_POINT) return true;\r\n    return false;\r\n  },\r\n\r\n  //  点击响应事件\r\n  onMouseDown() {\r\n    const bridgeNode = this.mainScriptCom.bridgeNode;\r\n    const bridgeCom = bridgeNode.getComponent('Bridge');\r\n    // console.log(bridgeNode, bridgeCom);\r\n    // console.log(this.posInfo);\r\n    let action = null;\r\n\r\n    // if (this.canGetOnTheBridge()) {\r\n    //  取消任何可以点击的部位的点击事件\r\n    removeMouseDownEvents(...this.mainScriptCom.animalComs, this.mainScriptCom.goBtnNode.getComponent('GoBtn'));\r\n\r\n    switch (this.posInfo) {\r\n      case this.data.json.posInfo.LEFT_RIVER_BANK: {  //  在左岸，向左集合点移动\r\n        if (this.canGetOnTheBridge()) {\r\n\r\n          //  先更新桥上站位的信息\r\n          const pointIndex = bridgeCom.searchStandPoint();\r\n          console.log(pointIndex);\r\n          if (pointIndex !== -1) {\r\n            // console.log(pointIndex);\r\n            bridgeCom.getOn(this, pointIndex);\r\n            this.posInfo = this.data.json.posInfo.LEFT_STAND_POINT;\r\n            action = this.moveTo(bridgeCom.standPoints[this.standPointIndex].leftPos);\r\n            // this.node.runAction(this.moveTo(bridgeCom.standPoints[this.standPointIndex].leftPos));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case this.data.json.posInfo.LEFT_STAND_POINT: {  //  在左集合点，向左岸移动\r\n        bridgeCom.getOff(this);\r\n        this.posInfo = this.data.json.posInfo.LEFT_RIVER_BANK;\r\n        action = this.moveTo(this.leftPos);\r\n        // this.node.runAction(this.moveTo(this.leftPos));\r\n\r\n        break;\r\n      }\r\n      case this.data.json.posInfo.RIGHT_STAND_POINT: {  //  在右集合点，向右岸移动\r\n        //  先更新桥上站位的信息\r\n        // const pointIndex = bridgeCom.searchStandPoint();\r\n        // if (pointIndex !== -1) {\r\n        //   // console.log(pointIndex);\r\n        //   bridgeCom.getOn(this, pointIndex);\r\n        //   this.posInfo = this.data.json.posInfo.RIGHT_RIVER_BANK;\r\n        //   this.node.runAction(this.moveTo(bridgeCom.standPoints[this.standPointIndex].rightPos));\r\n        // }\r\n\r\n        bridgeCom.getOff(this);\r\n        this.posInfo = this.data.json.posInfo.RIGHT_RIVER_BANK;\r\n        action = this.moveTo(this.rightPos);\r\n        // this.node.runAction(this.moveTo(this.rightPos));\r\n\r\n        break;\r\n      }\r\n      case this.data.json.posInfo.RIGHT_RIVER_BANK: {  //  在右岸，向右集合点移动\r\n        // bridgeCom.getOff(this);\r\n        // this.posInfo = this.data.json.posInfo.RIGHT_STAND_POINT;\r\n        // this.node.runAction(this.moveTo(this.rightPos));\r\n\r\n        if (this.canGetOnTheBridge()) {\r\n          // removeMouseDownEvents(...this.mainScriptCom.animalComs, this.mainScriptCom.goBtnNode.getComponent('GoBtn'));\r\n          //  先更新桥上站位的信息\r\n          const pointIndex = bridgeCom.searchStandPoint();\r\n          if (pointIndex !== -1) {\r\n            // console.log(pointIndex);\r\n            bridgeCom.getOn(this, pointIndex);\r\n            this.posInfo = this.data.json.posInfo.RIGHT_STAND_POINT;\r\n            action = this.moveTo(bridgeCom.standPoints[this.standPointIndex].rightPos);\r\n            // this.node.runAction(this.moveTo(bridgeCom.standPoints[this.standPointIndex].rightPos));\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    // }\r\n\r\n\r\n    //  开始移动\r\n    if (action) {\r\n      this.node.runAction(cc.sequence(action, cc.callFunc(() => {\r\n        //  动画播放完之后恢复点击事件\r\n        resumeMouseDownEvents(...this.mainScriptCom.animalComs, this.mainScriptCom.goBtnNode.getComponent('GoBtn'));\r\n\r\n        //  检测是否游戏胜利\r\n        if (this.mainScriptCom.ifSucceed()) {\r\n          this.mainScriptCom.succeed();\r\n        }\r\n\r\n      }, this)));\r\n    } else {\r\n      resumeMouseDownEvents(...this.mainScriptCom.animalComs, this.mainScriptCom.goBtnNode.getComponent('GoBtn'));\r\n    }\r\n  },\r\n\r\n  //  绑定鼠标点击事件\r\n  bindMouseDownEvent() {\r\n    this.node.on(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this);\r\n  },\r\n\r\n  //  解除鼠标点击事件\r\n  removeMouseDownEvent() {\r\n    this.node.off(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this);\r\n  },\r\n\r\n  //  初始化动物位置信息\r\n  initPosInfo() {\r\n    this.posInfo = this.data.json.posInfo.LEFT_RIVER_BANK;\r\n  },\r\n\r\n  //  移动(特指上下桥的移动)\r\n  moveTo({ x, y }) {\r\n    // console.log(this.timeComsuming);\r\n    const moveAction = cc.moveTo(this.timeConsuming / 3, x, y);\r\n    return moveAction;\r\n  },\r\n\r\n  //  设置过桥的速度\r\n  setTimeConsuming(timeComsuming) {\r\n    this.crossRiverTimeConsuming = timeComsuming;\r\n  },\r\n\r\n  //  转换动物在桥上的位置状态\r\n  toggleBridgePosInfo() {\r\n    this.posInfo = this.posInfo === this.data.json.posInfo.LEFT_STAND_POINT\r\n      ? this.data.json.posInfo.RIGHT_STAND_POINT\r\n      : this.data.json.posInfo.LEFT_STAND_POINT;\r\n  },\r\n\r\n  //  过河(特指过河的移动)\r\n  crossRiver() {\r\n    const bridgeNode = this.mainScriptCom.bridgeNode;\r\n    const bridgeCom = bridgeNode.getComponent('Bridge');\r\n    let crossAction = null;\r\n    // console.log(this.posInfo);\r\n    if (this.posInfo === this.data.json.posInfo.LEFT_STAND_POINT) {\r\n      crossAction = cc.moveTo(this.crossRiverTimeConsuming, bridgeCom.standPoints[this.standPointIndex].rightPos.x, bridgeCom.standPoints[this.standPointIndex].rightPos.y);\r\n      // this.posInfo = this.data.json.posInfo.RIGHT_STAND_POINT;\r\n    } else {\r\n      crossAction = cc.moveTo(this.crossRiverTimeConsuming, bridgeCom.standPoints[this.standPointIndex].leftPos.x, bridgeCom.standPoints[this.standPointIndex].leftPos.y);\r\n      // this.posInfo = this.data.json.posInfo.LEFT_STAND_POINT;\r\n    }\r\n    return crossAction;\r\n  },\r\n\r\n  //  显示过河所花的时间\r\n  showTimeConsuming() {\r\n    const displayer = this.mainScriptCom.AnimalTimeConsumingDisplayer;\r\n    displayer.string = this.chineseName + '过桥需要' + this.timeConsuming + '秒';\r\n    // console.log(displayer);\r\n  },\r\n\r\n  //  鼠标悬停事件\r\n  onMouseEnter() {\r\n    this.showTimeConsuming();\r\n  },\r\n\r\n  //  绑定鼠标悬停事件\r\n  bindMouseEnterEvent() {\r\n    this.node.on(cc.Node.EventType.MOUSE_ENTER, this.onMouseEnter, this);\r\n  },\r\n\r\n  onLoad() {\r\n    this.initPosInfo();\r\n    this.bindMouseDownEvent();\r\n    this.bindMouseEnterEvent();\r\n    bindCursorEvent(this.node, this);\r\n    bindScaleEvent(this.node, this, 0.2);\r\n  },\r\n\r\n  start() {\r\n\r\n  },\r\n\r\n  // update (dt) {},\r\n});\r\n"]}