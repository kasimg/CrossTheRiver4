{"version":3,"sources":["GoBtn.js"],"names":["cc","Class","extends","Component","properties","initTimeConsumingSum","timeConsumingSum","moveAnimalsAndLantern","bridgeCom","mainScriptCom","bridgeNode","getComponent","passages","getPassages","lanternCom","lanternNode","timeConsuming","getTimeConsuming","forEach","passage","setTimeConsuming","node","runAction","sequence","crossRiver","callFunc","toggleBridgePosInfo","move","updateTimeConsuming","resumeMouseDownEvents","animalComs","goBtnNode","onMouseDown","removeMouseDownEvents","isEmpty","bindMouseDownEvent","on","Node","EventType","MOUSE_DOWN","showTime","timeDisplayer","crossTimeConsumingDisplayer","length","string","appearTween","tween","to","opacity","start","hideTime","timer","ifGameOver","gameOver","director","loadScene","onMouseLeave","onMouseEnter","bindMouseEnterEvent","MOUSE_ENTER","bindMouseLeaveEvent","MOUSE_LEAVE","removeMouseDownEvent","off","onLoad"],"mappings":"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","file":"GoBtn.js","sourceRoot":"../../../../assets/Script","sourcesContent":["import { bindCursorEvent, bindScaleEvent, removeMouseDownEvents, resumeMouseDownEvents } from './Utils';\n//  go按钮对象\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n  },\n\n  //  初始化总消耗的时间\n  initTimeConsumingSum() {\n    this.timeConsumingSum = 0;\n  },\n\n  //  移动动物和灯笼\n  moveAnimalsAndLantern() {\n    // const bridgeNode = this.mainScriptCom.bridgeNode;\n    const bridgeCom = this.mainScriptCom.bridgeNode.getComponent('Bridge');\n    const passages = bridgeCom.getPassages();\n    // const lanternNode = this.mainScriptCom.lanternNode;\n    const lanternCom = this.mainScriptCom.lanternNode.getComponent('Lantern');\n    // const \n\n    //  获取移动时间\n    const timeConsuming = bridgeCom.getTimeConsuming();\n\n    //  乘客移动\n    passages.forEach((passage) => {\n      passage.setTimeConsuming(timeConsuming / 3);  //  让实际运动时间减少一点\n      passage.node.runAction(cc.sequence(passage.crossRiver(), cc.callFunc(() => {\n        passage.toggleBridgePosInfo();\n        // this.updateTimeConsuming();\n      })));\n    });\n\n    //  灯笼移动\n    lanternCom.setTimeConsuming(timeConsuming / 3);\n    lanternCom.node.runAction(cc.sequence(lanternCom.move(), cc.callFunc(() => {\n      lanternCom.toggleBridgePosInfo();\n      this.updateTimeConsuming();\n\n      //  过河之后恢复点击\n      resumeMouseDownEvents(...this.mainScriptCom.animalComs, this.mainScriptCom.goBtnNode.getComponent('GoBtn'));\n    })))\n    // lanternCom.move();\n  },\n\n  //  按钮点击事件\n  onMouseDown() {\n    const bridgeCom = this.mainScriptCom.bridgeNode.getComponent('Bridge');\n\n    //  取消所有点击事件\n    removeMouseDownEvents(...this.mainScriptCom.animalComs, this.mainScriptCom.goBtnNode.getComponent('GoBtn'));\n    if (!bridgeCom.isEmpty()) {\n      this.moveAnimalsAndLantern();\n    }\n  },\n\n  //  绑定按钮点击事件\n  bindMouseDownEvent() {\n    this.node.on(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this);\n  },\n\n  //  显示此次过河需要的时间\n  showTime() {\n    const bridgeCom = this.mainScriptCom.bridgeNode.getComponent('Bridge');\n    const timeDisplayer = this.mainScriptCom.crossTimeConsumingDisplayer;\n    if (bridgeCom.getPassages().length > 0) {  //  如果有乘客才显示过河需要花费的时间\n      const timeConsuming = bridgeCom.getTimeConsuming();\n      //  缓慢浮现时间\n      timeDisplayer.string = '此次过河需要' + timeConsuming + '秒';\n      const appearTween = cc.tween(timeDisplayer.node)\n        .to(0.3, { opacity: 255 });\n      appearTween.start();\n    }\n  },\n\n  //  取消过河时间的显示\n  hideTime() {\n    const timeDisplayer = this.mainScriptCom.crossTimeConsumingDisplayer;\n    cc.tween(timeDisplayer.node)\n      .to(0.3, { opacity: 0 })\n      .start();\n  },\n\n  //  更新总耗时的显示\n  updateTimeConsuming() {\n    // console.log('update')\n    const timer = this.mainScriptCom.timer;\n    const bridgeCom = this.mainScriptCom.bridgeNode.getComponent('Bridge');\n    this.timeConsumingSum += bridgeCom.getTimeConsuming();\n    timer.string = '总耗时: ' + this.timeConsumingSum + '秒';\n\n    //  判断是否游戏结束\n    if (this.ifGameOver()) {\n      this.gameOver();\n    }\n  },\n\n  //  判断游戏是否结束\n  ifGameOver() {\n    if (this.timeConsumingSum > 30) return true;\n    return false;\n  },\n\n  //  游戏结束时进行的操作\n  gameOver() {\n    cc.director.loadScene('gameOver');\n  },\n\n  //  鼠标离开事件\n  onMouseLeave() {\n    this.hideTime();\n  },\n\n  //  鼠标悬停事件\n  onMouseEnter() {\n    this.showTime();\n  },\n\n  //  绑定鼠标悬停事件\n  bindMouseEnterEvent() {\n    this.node.on(cc.Node.EventType.MOUSE_ENTER, this.onMouseEnter, this);\n  },\n\n  //  绑定鼠标离开事件\n  bindMouseLeaveEvent() {\n    this.node.on(cc.Node.EventType.MOUSE_LEAVE, this.onMouseLeave, this);\n  },\n\n  //  移除鼠标点击事件\n  removeMouseDownEvent() {\n    this.node.off(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this);\n  },\n\n  onLoad() {\n    this.initTimeConsumingSum();\n    this.bindMouseDownEvent();\n    this.bindMouseEnterEvent();\n    this.bindMouseLeaveEvent();\n    bindCursorEvent(this.node, this);\n    bindScaleEvent(this.node, this, 0.2);\n    // this.updateTimeConsuming();\n    // this.node.on(cc.Node.EventType.MOUSE_ENTER, () => {console.log('a')}, this);\n    // this.node.on(cc.Node.EventType.MOUSE_ENTER, () => {console.log('b')}, this);\n  },\n\n  start() {\n\n  },\n\n  // update (dt) {},\n});\n"]}