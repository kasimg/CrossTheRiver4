{"version":3,"sources":["Animal.js"],"names":["cc","Class","extends","Component","properties","data","default","type","JsonAsset","onMouseDown","bridgeNode","mainScriptCom","bridgeCom","getComponent","console","log","posInfo","json","LEFT_RIVER_BANK","pointIndex","searchStandPoint","getOn","LEFT_STAND_POINT","node","runAction","moveTo","standPoints","standPointIndex","leftPos","getOff","RIGHT_STAND_POINT","RIGHT_RIVER_BANK","rightPos","bindMouseDownEvent","on","Node","EventType","MOUSE_DOWN","initPosInfo","x","y","moveAction","timeConsuming","setTimeConsuming","timeComsuming","crossRiverTimeConsuming","toggleBridgePosInfo","crossRiver","crossAction","showTimeConsuming","displayer","AnimalTimeConsumingDisplayer","string","chineseName","onMouseEnter","bindMouseEnterEvent","MOUSE_ENTER","onLoad","start"],"mappings":";;;;;;AAAA;;AACA;AACAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACVC,UAAM,EAAG;AACPC,eAAS,IADL;AAEJC,YAAMP,GAAGQ;AAFL;AADI,GAHL;;AAUP;AACAC,aAXO,yBAWO;AACZ,QAAMC,aAAa,KAAKC,aAAL,CAAmBD,UAAtC;AACA,QAAME,YAAYF,WAAWG,YAAX,CAAwB,QAAxB,CAAlB;AACA;AACAC,YAAQC,GAAR,CAAY,KAAKC,OAAjB;AACA,YAAO,KAAKA,OAAZ;AACE,WAAK,KAAKX,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBE,eAA5B;AAA6C;AAAG;AAC9C;AACA,cAAMC,aAAaP,UAAUQ,gBAAV,EAAnB;AACA,cAAID,eAAe,CAAC,CAApB,EAAuB;AACrB;AACAP,sBAAUS,KAAV,CAAgB,IAAhB,EAAsBF,UAAtB;AACA,iBAAKH,OAAL,GAAe,KAAKX,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBM,gBAAtC;AACA,iBAAKC,IAAL,CAAUC,SAAV,CAAoB,KAAKC,MAAL,CAAYb,UAAUc,WAAV,CAAsB,KAAKC,eAA3B,EAA4CC,OAAxD,CAApB;AACD;AACD;AACD;AACD,WAAK,KAAKvB,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBM,gBAA5B;AAA8C;AAAG;AAC/CV,oBAAUiB,MAAV,CAAiB,IAAjB;AACA,eAAKb,OAAL,GAAe,KAAKX,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBE,eAAtC;AACA,eAAKK,IAAL,CAAUC,SAAV,CAAoB,KAAKC,MAAL,CAAY,KAAKG,OAAjB,CAApB;;AAEA;AACD;AACD,WAAK,KAAKvB,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBc,iBAA5B;AAA+C;AAAG;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAlB,oBAAUiB,MAAV,CAAiB,IAAjB;AACA,eAAKb,OAAL,GAAe,KAAKX,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBe,gBAAtC;AACA,eAAKR,IAAL,CAAUC,SAAV,CAAoB,KAAKC,MAAL,CAAY,KAAKO,QAAjB,CAApB;;AAEA;AACD;AACD,WAAK,KAAK3B,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBe,gBAA5B;AAA8C;AAAG;AAC/C;AACA;AACA;;AAEA;AACA,cAAMZ,cAAaP,UAAUQ,gBAAV,EAAnB;AACA,cAAID,gBAAe,CAAC,CAApB,EAAuB;AACrB;AACAP,sBAAUS,KAAV,CAAgB,IAAhB,EAAsBF,WAAtB;AACA,iBAAKH,OAAL,GAAe,KAAKX,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBc,iBAAtC;AACA,iBAAKP,IAAL,CAAUC,SAAV,CAAoB,KAAKC,MAAL,CAAYb,UAAUc,WAAV,CAAsB,KAAKC,eAA3B,EAA4CK,QAAxD,CAApB;AACD;AACD;AACD;AAjDH;AAmDD,GAnEM;;;AAqEP;AACAC,oBAtEO,gCAsEc;AACnB,SAAKV,IAAL,CAAUW,EAAV,CAAalC,GAAGmC,IAAH,CAAQC,SAAR,CAAkBC,UAA/B,EAA2C,KAAK5B,WAAhD,EAA6D,IAA7D;AACD,GAxEM;;;AA0EP;AACA6B,aA3EO,yBA2EO;AACZ,SAAKtB,OAAL,GAAe,KAAKX,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBE,eAAtC;AACD,GA7EM;;;AA+EP;AACAO,QAhFO,wBAgFU;AAAA,QAARc,CAAQ,QAARA,CAAQ;AAAA,QAALC,CAAK,QAALA,CAAK;;AACf;AACA,QAAMC,aAAazC,GAAGyB,MAAH,CAAU,KAAKiB,aAAL,GAAqB,CAA/B,EAAkCH,CAAlC,EAAqCC,CAArC,CAAnB;AACA,WAAOC,UAAP;AACD,GApFM;;;AAsFP;AACAE,kBAvFO,4BAuFUC,aAvFV,EAuFyB;AAC9B,SAAKC,uBAAL,GAA+BD,aAA/B;AACD,GAzFM;;;AA2FP;AACAE,qBA5FO,iCA4Fe;AACpB,SAAK9B,OAAL,GAAe,KAAKA,OAAL,KAAiB,KAAKX,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBM,gBAAxC,GACb,KAAKjB,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBc,iBADV,GAEb,KAAKzB,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBM,gBAFzB;AAGD,GAhGM;;;AAkGP;AACAyB,YAnGO,wBAmGM;AACX,QAAMrC,aAAa,KAAKC,aAAL,CAAmBD,UAAtC;AACA,QAAME,YAAYF,WAAWG,YAAX,CAAwB,QAAxB,CAAlB;AACA,QAAImC,cAAc,IAAlB;AACA;AACA,QAAI,KAAKhC,OAAL,KAAiB,KAAKX,IAAL,CAAUY,IAAV,CAAeD,OAAf,CAAuBM,gBAA5C,EAA8D;AAC5D0B,oBAAchD,GAAGyB,MAAH,CAAU,KAAKoB,uBAAf,EAAwCjC,UAAUc,WAAV,CAAsB,KAAKC,eAA3B,EAA4CK,QAA5C,CAAqDO,CAA7F,EAAgG3B,UAAUc,WAAV,CAAsB,KAAKC,eAA3B,EAA4CK,QAA5C,CAAqDQ,CAArJ,CAAd;AACA;AACD,KAHD,MAGO;AACLQ,oBAAchD,GAAGyB,MAAH,CAAU,KAAKoB,uBAAf,EAAwCjC,UAAUc,WAAV,CAAsB,KAAKC,eAA3B,EAA4CC,OAA5C,CAAoDW,CAA5F,EAA+F3B,UAAUc,WAAV,CAAsB,KAAKC,eAA3B,EAA4CC,OAA5C,CAAoDY,CAAnJ,CAAd;AACA;AACD;AACD,WAAOQ,WAAP;AACD,GAhHM;;;AAkHP;AACAC,mBAnHO,+BAmHa;AAClB,QAAMC,YAAY,KAAKvC,aAAL,CAAmBwC,4BAArC;AACAD,cAAUE,MAAV,GAAmB,KAAKC,WAAL,GAAmB,MAAnB,GAA4B,KAAKX,aAAjC,GAAiD,GAApE;AACA;AACD,GAvHM;;;AAyHP;AACAY,cA1HO,0BA0HQ;AACb,SAAKL,iBAAL;AACD,GA5HM;;;AA8HP;AACAM,qBA/HO,iCA+He;AACpB,SAAKhC,IAAL,CAAUW,EAAV,CAAalC,GAAGmC,IAAH,CAAQC,SAAR,CAAkBoB,WAA/B,EAA4C,KAAKF,YAAjD,EAA+D,IAA/D;AACD,GAjIM;AAmIPG,QAnIO,oBAmIE;AACP,SAAKnB,WAAL;AACA,SAAKL,kBAAL;AACA,SAAKsB,mBAAL;AACA,gCAAgB,KAAKhC,IAArB,EAA2B,IAA3B;AACA,+BAAe,KAAKA,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,IAAtC;AACD,GAzIM;AA2IPmC,OA3IO,mBA2IC,CAEP;AA7IM;;AA+IP;AA/IF","file":"Animal.js","sourceRoot":"../../../../assets/Script","sourcesContent":["import { bindCursorEvent, bindScaleEvent } from './Utils';\n//  动物类\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    data: {  //  游戏静态总数据\n      default: null,\n      type: cc.JsonAsset,\n    }\n  },\n\n  //  点击响应事件\n  onMouseDown() {\n    const bridgeNode = this.mainScriptCom.bridgeNode;\n    const bridgeCom = bridgeNode.getComponent('Bridge');\n    // console.log(bridgeNode, bridgeCom);\n    console.log(this.posInfo);\n    switch(this.posInfo) {\n      case this.data.json.posInfo.LEFT_RIVER_BANK: {  //  在左岸，向左集合点移动\n        //  先更新桥上站位的信息\n        const pointIndex = bridgeCom.searchStandPoint();\n        if (pointIndex !== -1) {\n          // console.log(pointIndex);\n          bridgeCom.getOn(this, pointIndex);\n          this.posInfo = this.data.json.posInfo.LEFT_STAND_POINT;\n          this.node.runAction(this.moveTo(bridgeCom.standPoints[this.standPointIndex].leftPos));\n        }\n        break;\n      }\n      case this.data.json.posInfo.LEFT_STAND_POINT: {  //  在左集合点，向左岸移动\n        bridgeCom.getOff(this);\n        this.posInfo = this.data.json.posInfo.LEFT_RIVER_BANK;\n        this.node.runAction(this.moveTo(this.leftPos));\n\n        break;\n      }\n      case this.data.json.posInfo.RIGHT_STAND_POINT: {  //  在右集合点，向右岸移动\n        //  先更新桥上站位的信息\n        // const pointIndex = bridgeCom.searchStandPoint();\n        // if (pointIndex !== -1) {\n        //   // console.log(pointIndex);\n        //   bridgeCom.getOn(this, pointIndex);\n        //   this.posInfo = this.data.json.posInfo.RIGHT_RIVER_BANK;\n        //   this.node.runAction(this.moveTo(bridgeCom.standPoints[this.standPointIndex].rightPos));\n        // }\n\n        bridgeCom.getOff(this);\n        this.posInfo = this.data.json.posInfo.RIGHT_RIVER_BANK;\n        this.node.runAction(this.moveTo(this.rightPos));\n\n        break;\n      }\n      case this.data.json.posInfo.RIGHT_RIVER_BANK: {  //  在右岸，向右集合点移动\n        // bridgeCom.getOff(this);\n        // this.posInfo = this.data.json.posInfo.RIGHT_STAND_POINT;\n        // this.node.runAction(this.moveTo(this.rightPos));\n\n        //  先更新桥上站位的信息\n        const pointIndex = bridgeCom.searchStandPoint();\n        if (pointIndex !== -1) {\n          // console.log(pointIndex);\n          bridgeCom.getOn(this, pointIndex);\n          this.posInfo = this.data.json.posInfo.RIGHT_STAND_POINT;\n          this.node.runAction(this.moveTo(bridgeCom.standPoints[this.standPointIndex].rightPos));\n        }\n        break;\n      }\n    }\n  },\n\n  //  绑定鼠标点击事件\n  bindMouseDownEvent() {\n    this.node.on(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this);\n  },\n\n  //  初始化动物位置信息\n  initPosInfo() {\n    this.posInfo = this.data.json.posInfo.LEFT_RIVER_BANK;\n  },\n\n  //  移动(特指上下桥的移动)\n  moveTo({ x, y }) {\n    // console.log(this.timeComsuming);\n    const moveAction = cc.moveTo(this.timeConsuming / 3, x, y);\n    return moveAction;\n  },\n\n  //  设置过桥的速度\n  setTimeConsuming(timeComsuming) {\n    this.crossRiverTimeConsuming = timeComsuming;\n  },\n\n  //  转换动物在桥上的位置状态\n  toggleBridgePosInfo() {\n    this.posInfo = this.posInfo === this.data.json.posInfo.LEFT_STAND_POINT\n    ? this.data.json.posInfo.RIGHT_STAND_POINT\n    : this.data.json.posInfo.LEFT_STAND_POINT;\n  },\n\n  //  过河(特指过河的移动)\n  crossRiver() {\n    const bridgeNode = this.mainScriptCom.bridgeNode;\n    const bridgeCom = bridgeNode.getComponent('Bridge');\n    let crossAction = null;\n    // console.log(this.posInfo);\n    if (this.posInfo === this.data.json.posInfo.LEFT_STAND_POINT) {\n      crossAction = cc.moveTo(this.crossRiverTimeConsuming, bridgeCom.standPoints[this.standPointIndex].rightPos.x, bridgeCom.standPoints[this.standPointIndex].rightPos.y);\n      // this.posInfo = this.data.json.posInfo.RIGHT_STAND_POINT;\n    } else {\n      crossAction = cc.moveTo(this.crossRiverTimeConsuming, bridgeCom.standPoints[this.standPointIndex].leftPos.x, bridgeCom.standPoints[this.standPointIndex].leftPos.y);\n      // this.posInfo = this.data.json.posInfo.LEFT_STAND_POINT;\n    }\n    return crossAction;\n  },\n\n  //  显示过河所花的时间\n  showTimeConsuming() {\n    const displayer = this.mainScriptCom.AnimalTimeConsumingDisplayer;\n    displayer.string = this.chineseName + '过桥需要' + this.timeConsuming + '秒';\n    // console.log(displayer);\n  },\n\n  //  鼠标悬停事件\n  onMouseEnter() {\n    this.showTimeConsuming();\n  },\n\n  //  绑定鼠标悬停事件\n  bindMouseEnterEvent() {\n    this.node.on(cc.Node.EventType.MOUSE_ENTER, this.onMouseEnter, this);\n  },\n\n  onLoad() {\n    this.initPosInfo();\n    this.bindMouseDownEvent();\n    this.bindMouseEnterEvent();\n    bindCursorEvent(this.node, this);\n    bindScaleEvent(this.node, this, 0.18, 0.15);\n  },\n\n  start() {\n\n  },\n\n  // update (dt) {},\n});\n"]}