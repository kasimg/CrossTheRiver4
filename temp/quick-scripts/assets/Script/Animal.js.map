{"version":3,"sources":["Animal.js"],"names":["cc","Class","extends","Component","properties","data","default","type","JsonAsset","onMouseDown","bridgeNode","mainScriptCom","bridgeCom","getComponent","action","removeMouseDownEvents","animalComs","goBtnNode","posInfo","json","LEFT_RIVER_BANK","pointIndex","searchStandPoint","console","log","getOn","LEFT_STAND_POINT","moveTo","standPoints","standPointIndex","leftPos","getOff","RIGHT_STAND_POINT","RIGHT_RIVER_BANK","rightPos","node","runAction","sequence","callFunc","resumeMouseDownEvents","ifSucceed","succeed","bindMouseDownEvent","on","Node","EventType","MOUSE_DOWN","removeMouseDownEvent","off","initPosInfo","x","y","moveAction","timeConsuming","setTimeConsuming","timeComsuming","crossRiverTimeConsuming","toggleBridgePosInfo","crossRiver","crossAction","showTimeConsuming","displayer","AnimalTimeConsumingDisplayer","string","chineseName","onMouseEnter","bindMouseEnterEvent","MOUSE_ENTER","onLoad","start"],"mappings":";;;;;;AAAA;;;;AACA;AACAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACVC,UAAM,EAAG;AACPC,eAAS,IADL;AAEJC,YAAMP,GAAGQ;AAFL;AADI,GAHL;;AAUP;AACAC,aAXO,yBAWO;AAAA;;AACZ,QAAMC,aAAa,KAAKC,aAAL,CAAmBD,UAAtC;AACA,QAAME,YAAYF,WAAWG,YAAX,CAAwB,QAAxB,CAAlB;AACA;AACA;AACA,QAAIC,SAAS,IAAb;;AAEA;AACAC,qEAAyB,KAAKJ,aAAL,CAAmBK,UAA5C,UAAwD,KAAKL,aAAL,CAAmBM,SAAnB,CAA6BJ,YAA7B,CAA0C,OAA1C,CAAxD;AACA,YAAO,KAAKK,OAAZ;AACE,WAAK,KAAKb,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBE,eAA5B;AAA6C;AAAG;AAC9C;AACA,cAAMC,aAAaT,UAAUU,gBAAV,EAAnB;AACAC,kBAAQC,GAAR,CAAYH,UAAZ;AACA,cAAIA,eAAe,CAAC,CAApB,EAAuB;AACrB;AACAT,sBAAUa,KAAV,CAAgB,IAAhB,EAAsBJ,UAAtB;AACA,iBAAKH,OAAL,GAAe,KAAKb,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBQ,gBAAtC;AACAZ,qBAAS,KAAKa,MAAL,CAAYf,UAAUgB,WAAV,CAAsB,KAAKC,eAA3B,EAA4CC,OAAxD,CAAT;AACA;AACD;AACD;AACD;AACD,WAAK,KAAKzB,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBQ,gBAA5B;AAA8C;AAAG;AAC/Cd,oBAAUmB,MAAV,CAAiB,IAAjB;AACA,eAAKb,OAAL,GAAe,KAAKb,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBE,eAAtC;AACAN,mBAAS,KAAKa,MAAL,CAAY,KAAKG,OAAjB,CAAT;AACA;;AAEA;AACD;AACD,WAAK,KAAKzB,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBc,iBAA5B;AAA+C;AAAG;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEApB,oBAAUmB,MAAV,CAAiB,IAAjB;AACA,eAAKb,OAAL,GAAe,KAAKb,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBe,gBAAtC;AACAnB,mBAAS,KAAKa,MAAL,CAAY,KAAKO,QAAjB,CAAT;AACA;;AAEA;AACD;AACD,WAAK,KAAK7B,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBe,gBAA5B;AAA8C;AAAG;AAC/C;AACA;AACA;;AAEA;AACA,cAAMZ,cAAaT,UAAUU,gBAAV,EAAnB;AACA,cAAID,gBAAe,CAAC,CAApB,EAAuB;AACrB;AACAT,sBAAUa,KAAV,CAAgB,IAAhB,EAAsBJ,WAAtB;AACA,iBAAKH,OAAL,GAAe,KAAKb,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBc,iBAAtC;AACAlB,qBAAS,KAAKa,MAAL,CAAYf,UAAUgB,WAAV,CAAsB,KAAKC,eAA3B,EAA4CK,QAAxD,CAAT;AACA;AACD;AACD;AACD;AAtDH;;AAyDA;AACA,QAAIpB,MAAJ,EAAY;AACV,WAAKqB,IAAL,CAAUC,SAAV,CAAoBpC,GAAGqC,QAAH,CAAYvB,MAAZ,EAAoBd,GAAGsC,QAAH,CAAY,YAAM;AACxD;AACAC,yEAAyB,MAAK5B,aAAL,CAAmBK,UAA5C,UAAwD,MAAKL,aAAL,CAAmBM,SAAnB,CAA6BJ,YAA7B,CAA0C,OAA1C,CAAxD;;AAEA;AACA,YAAG,MAAKF,aAAL,CAAmB6B,SAAnB,EAAH,EAAmC;AACjC,gBAAK7B,aAAL,CAAmB8B,OAAnB;AACD;AACA,OARqC,EAQnC,IARmC,CAApB,CAApB;AASD;AACF,GAzFM;;;AA2FP;AACAC,oBA5FO,gCA4Fc;AACnB,SAAKP,IAAL,CAAUQ,EAAV,CAAa3C,GAAG4C,IAAH,CAAQC,SAAR,CAAkBC,UAA/B,EAA2C,KAAKrC,WAAhD,EAA6D,IAA7D;AACD,GA9FM;;;AAgGP;AACAsC,sBAjGO,kCAiGgB;AACrB,SAAKZ,IAAL,CAAUa,GAAV,CAAchD,GAAG4C,IAAH,CAAQC,SAAR,CAAkBC,UAAhC,EAA4C,KAAKrC,WAAjD,EAA8D,IAA9D;AACD,GAnGM;;;AAqGP;AACAwC,aAtGO,yBAsGO;AACZ,SAAK/B,OAAL,GAAe,KAAKb,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBE,eAAtC;AACD,GAxGM;;;AA0GP;AACAO,QA3GO,wBA2GU;AAAA,QAARuB,CAAQ,QAARA,CAAQ;AAAA,QAALC,CAAK,QAALA,CAAK;;AACf;AACA,QAAMC,aAAapD,GAAG2B,MAAH,CAAU,KAAK0B,aAAL,GAAqB,CAA/B,EAAkCH,CAAlC,EAAqCC,CAArC,CAAnB;AACA,WAAOC,UAAP;AACD,GA/GM;;;AAiHP;AACAE,kBAlHO,4BAkHUC,aAlHV,EAkHyB;AAC9B,SAAKC,uBAAL,GAA+BD,aAA/B;AACD,GApHM;;;AAsHP;AACAE,qBAvHO,iCAuHe;AACpB,SAAKvC,OAAL,GAAe,KAAKA,OAAL,KAAiB,KAAKb,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBQ,gBAAxC,GACb,KAAKrB,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBc,iBADV,GAEb,KAAK3B,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBQ,gBAFzB;AAGD,GA3HM;;;AA6HP;AACAgC,YA9HO,wBA8HM;AACX,QAAMhD,aAAa,KAAKC,aAAL,CAAmBD,UAAtC;AACA,QAAME,YAAYF,WAAWG,YAAX,CAAwB,QAAxB,CAAlB;AACA,QAAI8C,cAAc,IAAlB;AACA;AACA,QAAI,KAAKzC,OAAL,KAAiB,KAAKb,IAAL,CAAUc,IAAV,CAAeD,OAAf,CAAuBQ,gBAA5C,EAA8D;AAC5DiC,oBAAc3D,GAAG2B,MAAH,CAAU,KAAK6B,uBAAf,EAAwC5C,UAAUgB,WAAV,CAAsB,KAAKC,eAA3B,EAA4CK,QAA5C,CAAqDgB,CAA7F,EAAgGtC,UAAUgB,WAAV,CAAsB,KAAKC,eAA3B,EAA4CK,QAA5C,CAAqDiB,CAArJ,CAAd;AACA;AACD,KAHD,MAGO;AACLQ,oBAAc3D,GAAG2B,MAAH,CAAU,KAAK6B,uBAAf,EAAwC5C,UAAUgB,WAAV,CAAsB,KAAKC,eAA3B,EAA4CC,OAA5C,CAAoDoB,CAA5F,EAA+FtC,UAAUgB,WAAV,CAAsB,KAAKC,eAA3B,EAA4CC,OAA5C,CAAoDqB,CAAnJ,CAAd;AACA;AACD;AACD,WAAOQ,WAAP;AACD,GA3IM;;;AA6IP;AACAC,mBA9IO,+BA8Ia;AAClB,QAAMC,YAAY,KAAKlD,aAAL,CAAmBmD,4BAArC;AACAD,cAAUE,MAAV,GAAmB,KAAKC,WAAL,GAAmB,MAAnB,GAA4B,KAAKX,aAAjC,GAAiD,GAApE;AACA;AACD,GAlJM;;;AAoJP;AACAY,cArJO,0BAqJQ;AACb,SAAKL,iBAAL;AACD,GAvJM;;;AAyJP;AACAM,qBA1JO,iCA0Je;AACpB,SAAK/B,IAAL,CAAUQ,EAAV,CAAa3C,GAAG4C,IAAH,CAAQC,SAAR,CAAkBsB,WAA/B,EAA4C,KAAKF,YAAjD,EAA+D,IAA/D;AACD,GA5JM;AA8JPG,QA9JO,oBA8JE;AACP,SAAKnB,WAAL;AACA,SAAKP,kBAAL;AACA,SAAKwB,mBAAL;AACA,gCAAgB,KAAK/B,IAArB,EAA2B,IAA3B;AACA,+BAAe,KAAKA,IAApB,EAA0B,IAA1B,EAAgC,GAAhC;AACD,GApKM;AAsKPkC,OAtKO,mBAsKC,CAEP;AAxKM;;AA0KP;AA1KF","file":"Animal.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["import { bindCursorEvent, bindScaleEvent, removeMouseDownEvents, resumeMouseDownEvents } from './Utils';\r\n//  动物类\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    data: {  //  游戏静态总数据\r\n      default: null,\r\n      type: cc.JsonAsset,\r\n    }\r\n  },\r\n\r\n  //  点击响应事件\r\n  onMouseDown() {\r\n    const bridgeNode = this.mainScriptCom.bridgeNode;\r\n    const bridgeCom = bridgeNode.getComponent('Bridge');\r\n    // console.log(bridgeNode, bridgeCom);\r\n    // console.log(this.posInfo);\r\n    let action = null;\r\n    \r\n    //  取消任何可以点击的部位的点击事件\r\n    removeMouseDownEvents(...this.mainScriptCom.animalComs, this.mainScriptCom.goBtnNode.getComponent('GoBtn'));\r\n    switch(this.posInfo) {\r\n      case this.data.json.posInfo.LEFT_RIVER_BANK: {  //  在左岸，向左集合点移动\r\n        //  先更新桥上站位的信息\r\n        const pointIndex = bridgeCom.searchStandPoint();\r\n        console.log(pointIndex);\r\n        if (pointIndex !== -1) {\r\n          // console.log(pointIndex);\r\n          bridgeCom.getOn(this, pointIndex);\r\n          this.posInfo = this.data.json.posInfo.LEFT_STAND_POINT;\r\n          action = this.moveTo(bridgeCom.standPoints[this.standPointIndex].leftPos);\r\n          // this.node.runAction(this.moveTo(bridgeCom.standPoints[this.standPointIndex].leftPos));\r\n        }\r\n        break;\r\n      }\r\n      case this.data.json.posInfo.LEFT_STAND_POINT: {  //  在左集合点，向左岸移动\r\n        bridgeCom.getOff(this);\r\n        this.posInfo = this.data.json.posInfo.LEFT_RIVER_BANK;\r\n        action = this.moveTo(this.leftPos);\r\n        // this.node.runAction(this.moveTo(this.leftPos));\r\n\r\n        break;\r\n      }\r\n      case this.data.json.posInfo.RIGHT_STAND_POINT: {  //  在右集合点，向右岸移动\r\n        //  先更新桥上站位的信息\r\n        // const pointIndex = bridgeCom.searchStandPoint();\r\n        // if (pointIndex !== -1) {\r\n        //   // console.log(pointIndex);\r\n        //   bridgeCom.getOn(this, pointIndex);\r\n        //   this.posInfo = this.data.json.posInfo.RIGHT_RIVER_BANK;\r\n        //   this.node.runAction(this.moveTo(bridgeCom.standPoints[this.standPointIndex].rightPos));\r\n        // }\r\n\r\n        bridgeCom.getOff(this);\r\n        this.posInfo = this.data.json.posInfo.RIGHT_RIVER_BANK;\r\n        action = this.moveTo(this.rightPos);\r\n        // this.node.runAction(this.moveTo(this.rightPos));\r\n\r\n        break;\r\n      }\r\n      case this.data.json.posInfo.RIGHT_RIVER_BANK: {  //  在右岸，向右集合点移动\r\n        // bridgeCom.getOff(this);\r\n        // this.posInfo = this.data.json.posInfo.RIGHT_STAND_POINT;\r\n        // this.node.runAction(this.moveTo(this.rightPos));\r\n\r\n        //  先更新桥上站位的信息\r\n        const pointIndex = bridgeCom.searchStandPoint();\r\n        if (pointIndex !== -1) {\r\n          // console.log(pointIndex);\r\n          bridgeCom.getOn(this, pointIndex);\r\n          this.posInfo = this.data.json.posInfo.RIGHT_STAND_POINT;\r\n          action = this.moveTo(bridgeCom.standPoints[this.standPointIndex].rightPos);\r\n          // this.node.runAction(this.moveTo(bridgeCom.standPoints[this.standPointIndex].rightPos));\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    //  开始移动\r\n    if (action) {\r\n      this.node.runAction(cc.sequence(action, cc.callFunc(() => {\r\n        //  动画播放完之后恢复点击事件\r\n        resumeMouseDownEvents(...this.mainScriptCom.animalComs, this.mainScriptCom.goBtnNode.getComponent('GoBtn'));\r\n\r\n        //  检测是否游戏胜利\r\n        if(this.mainScriptCom.ifSucceed()) {\r\n          this.mainScriptCom.succeed();\r\n        }\r\n        }, this)));\r\n    }\r\n  },\r\n\r\n  //  绑定鼠标点击事件\r\n  bindMouseDownEvent() {\r\n    this.node.on(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this);\r\n  },\r\n\r\n  //  解除鼠标点击事件\r\n  removeMouseDownEvent() {\r\n    this.node.off(cc.Node.EventType.MOUSE_DOWN, this.onMouseDown, this);\r\n  },\r\n\r\n  //  初始化动物位置信息\r\n  initPosInfo() {\r\n    this.posInfo = this.data.json.posInfo.LEFT_RIVER_BANK;\r\n  },\r\n\r\n  //  移动(特指上下桥的移动)\r\n  moveTo({ x, y }) {\r\n    // console.log(this.timeComsuming);\r\n    const moveAction = cc.moveTo(this.timeConsuming / 3, x, y);\r\n    return moveAction;\r\n  },\r\n\r\n  //  设置过桥的速度\r\n  setTimeConsuming(timeComsuming) {\r\n    this.crossRiverTimeConsuming = timeComsuming;\r\n  },\r\n\r\n  //  转换动物在桥上的位置状态\r\n  toggleBridgePosInfo() {\r\n    this.posInfo = this.posInfo === this.data.json.posInfo.LEFT_STAND_POINT\r\n    ? this.data.json.posInfo.RIGHT_STAND_POINT\r\n    : this.data.json.posInfo.LEFT_STAND_POINT;\r\n  },\r\n\r\n  //  过河(特指过河的移动)\r\n  crossRiver() {\r\n    const bridgeNode = this.mainScriptCom.bridgeNode;\r\n    const bridgeCom = bridgeNode.getComponent('Bridge');\r\n    let crossAction = null;\r\n    // console.log(this.posInfo);\r\n    if (this.posInfo === this.data.json.posInfo.LEFT_STAND_POINT) {\r\n      crossAction = cc.moveTo(this.crossRiverTimeConsuming, bridgeCom.standPoints[this.standPointIndex].rightPos.x, bridgeCom.standPoints[this.standPointIndex].rightPos.y);\r\n      // this.posInfo = this.data.json.posInfo.RIGHT_STAND_POINT;\r\n    } else {\r\n      crossAction = cc.moveTo(this.crossRiverTimeConsuming, bridgeCom.standPoints[this.standPointIndex].leftPos.x, bridgeCom.standPoints[this.standPointIndex].leftPos.y);\r\n      // this.posInfo = this.data.json.posInfo.LEFT_STAND_POINT;\r\n    }\r\n    return crossAction;\r\n  },\r\n\r\n  //  显示过河所花的时间\r\n  showTimeConsuming() {\r\n    const displayer = this.mainScriptCom.AnimalTimeConsumingDisplayer;\r\n    displayer.string = this.chineseName + '过桥需要' + this.timeConsuming + '秒';\r\n    // console.log(displayer);\r\n  },\r\n\r\n  //  鼠标悬停事件\r\n  onMouseEnter() {\r\n    this.showTimeConsuming();\r\n  },\r\n\r\n  //  绑定鼠标悬停事件\r\n  bindMouseEnterEvent() {\r\n    this.node.on(cc.Node.EventType.MOUSE_ENTER, this.onMouseEnter, this);\r\n  },\r\n\r\n  onLoad() {\r\n    this.initPosInfo();\r\n    this.bindMouseDownEvent();\r\n    this.bindMouseEnterEvent();\r\n    bindCursorEvent(this.node, this);\r\n    bindScaleEvent(this.node, this, 0.2);\r\n  },\r\n\r\n  start() {\r\n\r\n  },\r\n\r\n  // update (dt) {},\r\n});\r\n"]}